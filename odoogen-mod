#! /usr/bin/env python

"""Odoo Module Generator

Copyright (C) 2014 Nicholas Booker <NMBooker@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
"""

import sys
import argparse
import os.path
import datetime
from funbox.maybe import maybe
from operator import methodcaller

from templates import TEMPLATE_LICENSE, renderfile
from common import die
import jinja2


def main(options):
    """Main program."""
    name = options.name
    if os.path.exists(name):
        die(3, 'Directory %s already exists' % name)
    ctx = {'name': name, 'repr': repr}
    ctx['fullname'] = options.fullname or raw_input('Full name: ').rstrip()
    ctx['summary'] = options.summary or raw_input('Summary: ').rstrip()
    ctx['author'] = options.author or raw_input('Author: ').rstrip()
    ctx['website'] = options.website or raw_input('Website: ').rstrip()
    ctx['category'] = options.category or raw_input('Category [Extras]): ').strip() or None
    ctx['depends'] = maybe(options.depends, methodcaller('split', ',')) or []
    ctx['today'] = datetime.date.today()

    ctx['license'] = jinja2.Template(TEMPLATE_LICENSE).render(**ctx)

    os.mkdir(name)

    openerp_py_path = os.path.join(name, '__openerp__.py')
    renderfile(openerp_py_path, TEMPLATE_OPENERP_PY, ctx)

    init_py_path = os.path.join(name, '__init__.py')
    renderfile(init_py_path, TEMPLATE_INIT_PY, ctx)
    os.mkdir(os.path.join(name, 'models'))
    renderfile(os.path.join(name, 'models', '__init__.py'), TEMPLATE_MODELS_INIT_PY, ctx)
    os.mkdir(os.path.join(name, 'views'))
    os.mkdir(os.path.join(name, 'security'))
    return


def get_options():
    """Get options for the script."""
    parser = argparse.ArgumentParser(
        description="Odoo Module Generator",
    )
    parser.add_argument('name', help='name of odoo module to generate')
    parser.add_argument('--author', '-a', default=None, help='Author name')
    parser.add_argument('--fullname', '-f', default=None, help='Full name')
    parser.add_argument('--summary', '-s', default=None, help='Summary')
    parser.add_argument('--website', '-w', default=None, help='Website URL')
    parser.add_argument('--category', '-c', default=None, help='Category')
    parser.add_argument('--depends', '-D', default=None, help='Dependencies e.g. -D account,sale')
    options = parser.parse_args()
    return options

TEMPLATE_INIT_PY = """# -*- coding: utf-8 -*-
{{license}}

from . import models

# vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4:
"""

TEMPLATE_MODELS_INIT_PY = """# -*- coding: utf-8 -*-
{{license}}

# from . import 

# vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4:
"""

TEMPLATE_OPENERP_PY = """# -*- coding: utf-8 -*-
{{license}}


{
    'name': {{repr(fullname)}},
    'version': '0.1',
    'author': {{repr(author)}},
    'website': {{repr(website)}},
    'summary': {{repr(summary)}},
    {% if category %}
    'category': {{repr(category)}},
    {% endif %}
    'description': \"\"\"{{summary}},
\"\"\",
    'images': [
    ],
    'depends': [{% for mod in depends %}
        '{{mod}}',{% endfor %}
    ],
    'data': [
    ],
    'demo': [
    ],
    'test': [
    ],
    'license': 'AGPL-3',
    'installable': True,
    'auto_install': False,

}

# vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4:
"""

if __name__ == "__main__":
    main(get_options())
